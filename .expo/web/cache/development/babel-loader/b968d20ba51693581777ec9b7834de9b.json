{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\WELCOME\\\\Desktop\\\\MusicAPP\\\\src\\\\components\\\\MusicStatusSlider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Slider from \"@react-native-community/slider\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from \"../ui/colors\";\nimport sizes from \"../ui/sizes\";\nimport * as Font from \"expo-font\";\n\nvar MusicStatusSlider = function (_React$Component) {\n  _inherits(MusicStatusSlider, _React$Component);\n\n  var _super = _createSuper(MusicStatusSlider);\n\n  function MusicStatusSlider() {\n    var _this;\n\n    _classCallCheck(this, MusicStatusSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.formatTime = function (millis) {\n      if (!millis) return \"00:00\";\n      var numerator = millis / 1000;\n      var denominator = 60;\n      var minutes = Math.floor(numerator / denominator).toString();\n      var secounds = Math.floor(numerator % denominator).toString();\n      var zero = \"0\";\n      return \"\" + zero.repeat(2 - minutes.length) + minutes + \":\" + zero.repeat(2 - secounds.length) + secounds;\n    };\n\n    return _this;\n  }\n\n  _createClass(MusicStatusSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var musicStatus = this.props.musicStatus;\n      var percent = musicStatus.positionMillis / musicStatus.durationMillis;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.sliderRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, React.createElement(Slider, {\n        style: styles.slider,\n        minimumValue: 0,\n        maximumValue: 1,\n        value: percent || 0,\n        thumbTintColor: colors.light,\n        minimumTrackTintColor: colors.light_transparent,\n        maximumTrackTintColor: \"#ffffff60\",\n        onValueChange: function onValueChange(value) {\n          return _this2.props.setPosition(value * musicStatus.durationMillis);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.indicator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, styles.left],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, this.formatTime(musicStatus.positionMillis)), React.createElement(Text, {\n        style: [styles.text, styles.right],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, this.formatTime(musicStatus.durationMillis))));\n    }\n  }]);\n\n  return MusicStatusSlider;\n}(React.Component);\n\nexport { MusicStatusSlider as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: colors.dark_transparent,\n    height: 46,\n    justifyContent: \"center\"\n  },\n  indicator: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  slider: {\n    width: sizes.slider_width,\n    height: 33\n  },\n  sliderRow: {\n    flex: 1\n  },\n  left: {\n    marginEnd: 226\n  },\n  text: {\n    color: colors.light_transparent,\n    fontSize: sizes.common_artist\n  }\n});","map":{"version":3,"sources":["C:/Users/WELCOME/Desktop/MusicAPP/src/components/MusicStatusSlider.js"],"names":["React","Slider","Ionicons","colors","sizes","Font","MusicStatusSlider","formatTime","millis","numerator","denominator","minutes","Math","floor","toString","secounds","zero","repeat","length","musicStatus","props","percent","positionMillis","durationMillis","styles","container","sliderRow","slider","light","light_transparent","value","setPosition","indicator","text","left","right","Component","StyleSheet","create","alignItems","backgroundColor","dark_transparent","height","justifyContent","flex","flexDirection","width","slider_width","marginEnd","color","fontSize","common_artist"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Text, View, StyleSheet } from \"react-native\"\nimport Slider from \"@react-native-community/slider\"\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from \"../ui/colors\"\nimport sizes from \"../ui/sizes\"\nimport * as Font from \"expo-font\"\nexport default class MusicStatusSlider extends React.Component {\n  componentDidMount() {}\n\n  formatTime = millis => {\n    if (!millis) return \"00:00\"\n    const numerator = millis / 1000\n    const denominator = 60\n    const minutes = Math.floor(numerator / denominator).toString()\n    const secounds = Math.floor(numerator % denominator).toString()\n    var zero = \"0\"\n    return `${zero.repeat(2 - minutes.length)}${minutes}:${zero.repeat(\n      2 - secounds.length\n    )}${secounds}`\n  }\n\n\n  render() {\n    const { musicStatus } = this.props\n    const percent = musicStatus.positionMillis / musicStatus.durationMillis\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.sliderRow}>\n          <Slider\n            style={styles.slider}\n            minimumValue={0}\n            maximumValue={1}\n            value={percent || 0}\n            thumbTintColor={colors.light}\n            minimumTrackTintColor={colors.light_transparent}\n            maximumTrackTintColor='#ffffff60'\n            onValueChange={value =>\n              this.props.setPosition(value * musicStatus.durationMillis)\n            }\n          />\n        </View>\n        <View style={styles.indicator}>\n          <Text style={[styles.text, styles.left]}>\n            {this.formatTime(musicStatus.positionMillis)}\n          </Text>\n          <Text style={[styles.text, styles.right]}>\n            {this.formatTime(musicStatus.durationMillis)}\n          </Text>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: colors.dark_transparent,\n    height: 46,\n    justifyContent: \"center\"\n  },\n  indicator: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  slider: {\n    width: sizes.slider_width,\n    height: 33\n  },\n  sliderRow: {\n    flex: 1\n  },\n  left: {\n    marginEnd: 226\n  },\n  text: {\n    color: colors.light_transparent,\n    fontSize: sizes.common_artist\n  }\n})\n"]},"metadata":{},"sourceType":"module"}