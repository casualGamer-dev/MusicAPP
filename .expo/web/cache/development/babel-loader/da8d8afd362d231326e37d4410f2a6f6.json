{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport { SELECT_MUSIC, UPDATE_MUSIC, UPDATE_TRACKS, UPDATE_MUSIC_STATUS } from \"./actions\";\n\nvar selectMusicReducer = function selectMusicReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === SELECT_MUSIC) {\n    return action.payload;\n  } else return state;\n};\n\nvar musicReducer = function musicReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_MUSIC:\n      return state;\n\n    case UPDATE_TRACKS:\n      return [].concat(_toConsumableArray(state), _toConsumableArray(action.payload));\n\n    default:\n      return state;\n  }\n};\n\nvar musicStatusReducer = function musicStatusReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === UPDATE_MUSIC_STATUS) {\n    return action.payload;\n  } else return state;\n};\n\nvar reducer = combineReducers({\n  selected_music: selectMusicReducer,\n  tracks: musicReducer,\n  music_status: musicStatusReducer\n});\nexport default reducer;","map":{"version":3,"sources":["C:/Users/WELCOME/Desktop/MusicAPP/src/redux/reducers.js"],"names":["combineReducers","SELECT_MUSIC","UPDATE_MUSIC","UPDATE_TRACKS","UPDATE_MUSIC_STATUS","selectMusicReducer","state","action","type","payload","musicReducer","musicStatusReducer","reducer","selected_music","tracks","music_status"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,mBAJF;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBP,YAApB,EAAkC;AAChC,WAAOM,MAAM,CAACE,OAAd;AACD,GAFD,MAEO,OAAOH,KAAP;AACR,CAJD;;AAMA,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBJ,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,YAAL;AACE,aAAOI,KAAP;;AACF,SAAKH,aAAL;AACE,0CAAWG,KAAX,sBAAqBC,MAAM,CAACE,OAA5B;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,GAAwB;AAAA,MAAvBL,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBJ,mBAApB,EAAyC;AACvC,WAAOG,MAAM,CAACE,OAAd;AACD,GAFD,MAEO,OAAOH,KAAP;AACR,CAJD;;AAMA,IAAMM,OAAO,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,cAAc,EAAER,kBADc;AAE9BS,EAAAA,MAAM,EAAEJ,YAFsB;AAG9BK,EAAAA,YAAY,EAAEJ;AAHgB,CAAD,CAA/B;AAMA,eAAeC,OAAf","sourcesContent":["import { combineReducers } from \"redux\"\nimport {\n  SELECT_MUSIC,\n  UPDATE_MUSIC,\n  UPDATE_TRACKS,\n  UPDATE_MUSIC_STATUS\n} from \"./actions\"\n\nconst selectMusicReducer = (state = {}, action) => {\n  if (action.type === SELECT_MUSIC) {\n    return action.payload\n  } else return state\n}\n\nconst musicReducer = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_MUSIC:\n      return state\n    case UPDATE_TRACKS:\n      return [...state, ...action.payload]\n    default:\n      return state\n  }\n}\n\nconst musicStatusReducer = (state = {}, action) => {\n  if (action.type === UPDATE_MUSIC_STATUS) {\n    return action.payload\n  } else return state\n}\n\nconst reducer = combineReducers({\n  selected_music: selectMusicReducer,\n  tracks: musicReducer,\n  music_status: musicStatusReducer\n})\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}