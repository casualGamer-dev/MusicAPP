{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\WELCOME\\\\Desktop\\\\MusicAPP\\\\src\\\\screens\\\\LoadingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ExpoMusicApp from \"../ExpoMusicApp\";\nimport styles from \"./styles\";\n\nvar LoadingScreen = function (_React$Component) {\n  _inherits(LoadingScreen, _React$Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    var _this;\n\n    _classCallCheck(this, LoadingScreen);\n\n    _this = _super.call(this);\n\n    _this._loadFontsAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'PTSans': require(\"../assets/fonts/PTSans-Regular.ttf\"),\n                'PTSans-Bold': require(\"../assets/fonts/PTSans-Bold.ttf\"),\n                ionicons: Ionicons.font['ionicons']\n              }));\n\n            case 2:\n              _this.setState({\n                isReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, \"Loading\"));\n    }\n  }]);\n\n  return LoadingScreen;\n}(React.Component);\n\nexport { LoadingScreen as default };","map":{"version":3,"sources":["C:/Users/WELCOME/Desktop/MusicAPP/src/screens/LoadingScreen.js"],"names":["React","ExpoMusicApp","styles","LoadingScreen","_loadFontsAsync","Font","loadAsync","require","ionicons","Ionicons","font","setState","isReady","container","fontSize","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,YAAP;AACA,OAAOC,MAAP;;IAEqBC,a;;;;;AACnB,2BAAa;AAAA;;AAAA;;AACf;;AADe,UAGbC,eAHa,GAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACVC,IAAI,CAACC,SAAL,CAAe;AACnB,0BAAUC,OAAO,sCADE;AAEnB,+BAAeA,OAAO,mCAFH;AAGnBC,gBAAAA,QAAQ,EAAEC,QAAQ,CAACC,IAAT,CAAc,UAAd;AAHS,eAAf,CADU;;AAAA;AAOhB,oBAAKC,QAAL,CAAc;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHL;;AAAA;AAEZ;;;;WAUD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF;AAKD;;;;EAnBwCd,KAAK,CAACe,S;;SAA5BZ,a","sourcesContent":["import React from \"react\"\nimport { View, Text } from \"react-native\"\nimport ExpoMusicApp from \"../ExpoMusicApp\"\nimport styles from \"./styles\"\n\nexport default class LoadingScreen extends React.Component {\n  constructor(){\nsuper()\n  }\n  _loadFontsAsync = async () => {\n    await Font.loadAsync({\n      'PTSans': require('../assets/fonts/PTSans-Regular.ttf'),\n      'PTSans-Bold': require('../assets/fonts/PTSans-Bold.ttf'),\n      ionicons: Ionicons.font['ionicons']\n      \n    })\n    this.setState({ isReady: true })\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={{ fontSize: 22 }}>Loading</Text>\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}