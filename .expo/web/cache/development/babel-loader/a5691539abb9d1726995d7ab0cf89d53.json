{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\WELCOME\\\\Desktop\\\\MusicAPP\\\\src\\\\ExpoMusicApp.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Ionicons } from '@expo/vector-icons';\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport MusicDetailsScreen from \"./screens/MusicDetailsScreen\";\nimport MusicListScreen from \"./screens/MusicListScreen\";\nimport SearchScreen from \"./screens/SearchScreen\";\nimport * as Font from \"expo-font\";\nimport StickyMusicPlayerView from \"./containers/StickyMusicPlayerView\";\nimport { screenOptions, tabBarOptions } from \"./ui/main_tabbar\";\nvar MainTab = createBottomTabNavigator();\nvar HomeStack = createStackNavigator();\nvar SearchStack = createStackNavigator();\n\nvar Home = function Home() {\n  return React.createElement(HomeStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"MusicList\",\n    component: MusicListScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"MusicDetails\",\n    component: MusicDetailsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar Search = function Search() {\n  return React.createElement(SearchStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, React.createElement(SearchStack.Screen, {\n    name: \"SearchScreen\",\n    component: SearchScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar ExpoMusicApp = function (_Component) {\n  _inherits(ExpoMusicApp, _Component);\n\n  var _super = _createSuper(ExpoMusicApp);\n\n  function ExpoMusicApp(props) {\n    var _this;\n\n    _classCallCheck(this, ExpoMusicApp);\n\n    _this = _super.call(this, props);\n\n    _this._loadFontsAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'PTSans': require(\"../assets/fonts/PTSans-Regular.ttf\"),\n                'PTSans-Bold': require(\"../assets/fonts/PTSans-Bold.ttf\"),\n                ionicons: Ionicons.font['Ionicons']\n              }));\n\n            case 2:\n              _this.setState({\n                isReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      isReady: false\n    };\n\n    _this._loadFontsAsync();\n\n    return _this;\n  }\n\n  _createClass(ExpoMusicApp, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.isReady ? React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(MainTab.Navigator, {\n        screenOptions: screenOptions,\n        tabBarOptions: tabBarOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(MainTab.Screen, {\n        name: \"Home\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), React.createElement(MainTab.Screen, {\n        name: \"Search\",\n        component: Search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), React.createElement(MainTab.Screen, {\n        name: \"Book\",\n        component: Search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      })), React.createElement(StickyMusicPlayerView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      })) : React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ExpoMusicApp;\n}(Component);\n\nexport { ExpoMusicApp as default };","map":{"version":3,"sources":["C:/Users/WELCOME/Desktop/MusicAPP/src/ExpoMusicApp.js"],"names":["React","Component","createBottomTabNavigator","createStackNavigator","StatusBar","NavigationContainer","Ionicons","LoadingScreen","MusicDetailsScreen","MusicListScreen","SearchScreen","Font","StickyMusicPlayerView","screenOptions","tabBarOptions","MainTab","HomeStack","SearchStack","Home","Search","ExpoMusicApp","props","_loadFontsAsync","loadAsync","require","ionicons","font","setState","isReady","state"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,aAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,YAAP;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,qBAAP;AAEA,SAASC,aAAT,EAAwBC,aAAxB;AAEA,IAAMC,OAAO,GAAGb,wBAAwB,EAAxC;AACA,IAAMc,SAAS,GAAGb,oBAAoB,EAAtC;AACA,IAAMc,WAAW,GAAGd,oBAAoB,EAAxC;;AAEA,IAAMe,IAAI,GAAG,SAAPA,IAAO;AAAA,SACX,oBAAC,SAAD,CAAW,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAmC,IAAA,SAAS,EAAET,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAsC,IAAA,SAAS,EAAED,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADW;AAAA,CAAb;;AAQA,IAAMW,MAAM,GAAG,SAATA,MAAS;AAAA,SACb,oBAAC,WAAD,CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD,CAAa,MAAb;AAAoB,IAAA,IAAI,EAAC,cAAzB;AAAwC,IAAA,SAAS,EAAET,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADa;AAAA,CAAf;;IAMqBU,Y;;;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAOnBC,eAPmB,GAOD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACVX,IAAI,CAACY,SAAL,CAAe;AACnB,0BAAUC,OAAO,sCADE;AAEnB,+BAAeA,OAAO,mCAFH;AAGnBC,gBAAAA,QAAQ,EAAEnB,QAAQ,CAACoB,IAAT,CAAc,UAAd;AAHS,eAAf,CADU;;AAAA;AAOhB,oBAAKC,QAAL,CAAc;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPC;;AAEjB,UAAKC,KAAL,GAAa;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAb;;AACA,UAAKN,eAAL;;AAHiB;AAIlB;;;;WAaD,kBAAS;AACP,aAAO,KAAKO,KAAL,CAAWD,OAAX,GACL,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD,CAAS,SAAT;AACE,QAAA,aAAa,EAAEf,aADjB;AAEE,QAAA,aAAa,EAAEC,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,SAAS,EAAEI,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,SAAS,EAAEC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,SAAS,EAAEA,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,EASE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADK,GAaL,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF;AAeD;;;;EAlCuClB,S;;SAArBmB,Y","sourcesContent":["import React, { Component } from \"react\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\nimport { StatusBar } from \"expo-status-bar\"\nimport { Text, View } from \"react-native\"\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { Ionicons } from '@expo/vector-icons';\nimport LoadingScreen from \"./screens/LoadingScreen\"\nimport MusicDetailsScreen from \"./screens/MusicDetailsScreen\"\nimport MusicListScreen from \"./screens/MusicListScreen\"\nimport SearchScreen from \"./screens/SearchScreen\"\n// Special\nimport * as Font from \"expo-font\"\nimport StickyMusicPlayerView from \"./containers/StickyMusicPlayerView\"\n// Options\nimport { screenOptions, tabBarOptions } from \"./ui/main_tabbar\"\n\nconst MainTab = createBottomTabNavigator()\nconst HomeStack = createStackNavigator()\nconst SearchStack = createStackNavigator()\n\nconst Home = () => (\n  <HomeStack.Navigator>\n    <HomeStack.Screen name='MusicList' component={MusicListScreen} />\n    <HomeStack.Screen name='MusicDetails' component={MusicDetailsScreen} />\n  </HomeStack.Navigator>\n)\n\n// Just for top navigation bar.\nconst Search = () => (\n  <SearchStack.Navigator>\n    <SearchStack.Screen name='SearchScreen' component={SearchScreen} />\n  </SearchStack.Navigator>\n)\n\nexport default class ExpoMusicApp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { isReady: false }\n    this._loadFontsAsync()\n  }\n\n  \n  _loadFontsAsync = async () => {\n    await Font.loadAsync({\n      'PTSans': require('../assets/fonts/PTSans-Regular.ttf'),\n      'PTSans-Bold': require('../assets/fonts/PTSans-Bold.ttf'),\n      ionicons: Ionicons.font['Ionicons']\n      \n    })\n    this.setState({ isReady: true })\n  }\n \n  render() {\n    return this.state.isReady ? (\n      <NavigationContainer>\n        <MainTab.Navigator\n          screenOptions={screenOptions}\n          tabBarOptions={tabBarOptions}>\n          <MainTab.Screen name='Home' component={Home} />\n          <MainTab.Screen name='Search' component={Search} />\n          <MainTab.Screen name='Book' component={Search} />\n        </MainTab.Navigator>\n        {/* Non-Nav */}\n        <StickyMusicPlayerView />\n      </NavigationContainer>\n    ) : (\n      <LoadingScreen />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}